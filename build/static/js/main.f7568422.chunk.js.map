{"version":3,"sources":["img/salt-harvesting-1.jpg","img/boy_football-1.jpg","img/water-dream-1.jpg","img/athletes1.jpg","img/talahi-1.jpg","img/jump1.jpg","img/youtuber-1.jpg","App.js","reportWebVitals.js","index.js"],"names":["Footer","lazy","AudioComp","panelTxt","Photo0","Photo1","Photo2","Photo3","Photo4","Photo5","Photo6","App","allPanelsRef","useRef","flexDirection","panelRef","openAudio","closeAudio","arrayDrawFrom","Array","arrayDrawTo","useEffect","current","fill","map","el","ind","panelCurrent","forEach","panel","addEventListener","e","toggleOpen","toggleActive","removeEventListener","rowOrColumn","window","getComputedStyle","getPropertyValue","panelCurr","i","classList","add","randomWithoutRepeating","setTimeout","length","arrLength","arrFrom","arrTo","randomIndex","Math","floor","random","splice","useCallback","console","log","toggle","contains","play","p","propertyName","includes","AddToPanelRef","push","panels","useMemo","className","ref","style","backgroundImage","Fragment","fallback","refOpen","refClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7568422.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/salt-harvesting-1.35862fcd.jpg\";","export default __webpack_public_path__ + \"static/media/boy_football-1.f5e5688b.jpg\";","export default __webpack_public_path__ + \"static/media/water-dream-1.7d228351.jpg\";","export default __webpack_public_path__ + \"static/media/athletes1.9b2bdbe2.jpg\";","export default __webpack_public_path__ + \"static/media/talahi-1.3d8a4316.jpg\";","export default __webpack_public_path__ + \"static/media/jump1.14ec4529.jpg\";","export default __webpack_public_path__ + \"static/media/youtuber-1.32bcedf4.jpg\";","import React, {\n  useRef,\n  useMemo,\n  useEffect,\n  useCallback,\n  lazy,\n  Suspense,\n} from \"react\";\n// import \"./css/style.min.css\";\nimport \"./css/style.css\";\nimport Photo0 from \"./img/salt-harvesting-1.jpg\";\nimport Photo1 from \"./img/boy_football-1.jpg\";\nimport Photo2 from \"./img/water-dream-1.jpg\";\nimport Photo3 from \"./img/athletes1.jpg\";\nimport Photo4 from \"./img/talahi-1.jpg\";\nimport Photo5 from \"./img/jump1.jpg\";\nimport Photo6 from \"./img/youtuber-1.jpg\";\n\nconst Footer = lazy(() => import(\"./components/Footer\"));\n\nconst AudioComp = lazy(() => import(\"./components/AudioComp\"));\n\nconst panelTxt = [\n  [Photo0, \"Let's\", \"Follow\", \"The light\"],\n  [Photo1, \"Find\", \"Your\", \"Way\"],\n  [Photo2, \"Explore\", \"Dreams\", \"Are feasible\"],\n  [Photo3, \"I Watch\", \"They\", \"Play?\"],\n  [Photo4, \"To\", \"Know\", \"Yourself\"],\n  [Photo5, \"Seize\", \"The\", \"Day\"],\n  [Photo6, \"There's a\", \"Way\", \"Where there's a will\"],\n];\n\nfunction App() {\n  const allPanelsRef = useRef();\n  const flexDirection = useRef();\n  const panelRef = useRef([]);\n  const openAudio = useRef();\n  const closeAudio = useRef();\n  // two arrays used for drawing without repeating\n  const arrayDrawFrom = useRef(new Array(7));\n  const arrayDrawTo = useRef([]);\n\n  useEffect(() => {\n    arrayDrawFrom.current = arrayDrawFrom.current\n      .fill(0, 0)\n      .map((el, ind) => ind);\n    const panelCurrent = panelRef.current;\n    panelCurrent.forEach((panel) => {\n      panel.addEventListener(\"click\", (e) => {\n        toggleOpen(panel, e);\n      });\n      panel.addEventListener(\"transitionend\", (e) => {\n        toggleActive(panel, e);\n      });\n    });\n    return () => {\n      panelCurrent.forEach((panel) => {\n        panel.removeEventListener(\"click\", toggleOpen);\n        panel.removeEventListener(\"transitionend\", toggleActive);\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n// get value odf flex direction property of div 'panels'\nconst rowOrColumn = window.getComputedStyle(allPanelsRef.current).getPropertyValue(\"flex-direction\");\n// console.log(rowOrColumn);\nflexDirection.current = rowOrColumn;\n\n    const panelCurr = panelRef.current;\n\n    // hide all panels at the beginning\n    for (let i = 0; i < panelCurr.length; i++) {\n      if(flexDirection.current === 'row'){\n        panelCurr[i].classList.add(\"hide-down-row\");\n      } else {\n        panelCurr[i].classList.add(\"hide-down-col\");\n      }\n\n      // get random number for index\n      const ind = randomWithoutRepeating(i);\n\n      // show up all panels one by one\n      setTimeout(() => {\n        if(flexDirection.current === 'row'){\n          panelCurr[ind].classList.add(\"show-up-row\");\n        } else {\n          panelCurr[ind].classList.add(\"show-up-col\");\n        }\n\n      }, 400 * (i + 1));\n\n      // then rotate all panels one by one\n      setTimeout(()=>{\n        setTimeout(()=>{\n          if(flexDirection.current === 'row'){\n            panelCurr[i].classList.add(\"rotateY\");\n          } else {\n            panelCurr[i].classList.add(\"rotateX\");\n          }          \n        }, 150 * i);\n      }, 4250);\n\n    }\n  }, []);\n\n\n  // get random number that equals one of the index of all panels (there are 7 panels so index from 0 to 6)\n  const randomWithoutRepeating = (i) => {\n    // console.log(\"randomWithoutRepeating Fn\");\n    const arrLength = arrayDrawFrom.current.length;\n    const arrFrom = arrayDrawFrom.current;\n    const arrTo = arrayDrawTo.current;\n    const randomIndex = Math.floor(Math.random() * arrLength);\n    arrTo[i] = arrFrom[randomIndex];\n    arrFrom.splice(randomIndex, 1, arrFrom[arrLength - 1]);\n    arrFrom.splice(-1, 1);\n    return arrTo[i];\n  };\n\n  const toggleOpen = useCallback((panel, e) => {\n    console.log(\"toggleOpen Fn\");\n    panel.classList.toggle(\"open\");\n    if (panel.classList.contains(\"open\")) {\n      openAudio.current.play();\n    } else {\n      closeAudio.current.play();\n    }\n  }, []);\n\n  const toggleActive = useCallback((p, e) => {\n    if (e.propertyName.includes(\"flex\")) {\n      // console.log(p);\n      console.log(\"toggleActive Fn\");\n      p.classList.toggle(\"open-active\");\n    }\n  }, []);\n\n  const AddToPanelRef = useCallback(\n    (el) => {\n      if (el && !panelRef.current.includes(el)) {\n        panelRef.current.push(el);\n      }\n    },\n    [panelRef]\n  );\n\n  const panels = useMemo(() => {\n    return panelTxt.map((panel, ind) => {\n      return (\n        <div\n          className={\"panel panel\" + ind}\n          key={ind}\n          ref={AddToPanelRef}\n          style={{ backgroundImage: \"url(\" + panel[0] + \")\" }}\n        >\n          <p>{panel[1]}</p>\n          <p>{panel[2]}</p>\n          <p>{panel[3]}</p>\n        </div>\n      );\n    });\n  }, [panelTxt]);\n\n  return (\n    <React.Fragment>\n      <div className=\"panels\" ref={allPanelsRef}>{panels}</div>\n      <Suspense fallback={<p>Loading...</p>}>\n        <AudioComp refOpen={openAudio} refClose={closeAudio} />\n      </Suspense>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Footer />\n      </Suspense>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}